#!/bin/bash -e

set -e

export DEBIAN_FRONTEND=noninteractive

export VETH_IMAGE=${VETH_IMAGE:="binocarlos/veth"}
export GETH_IMAGE=${GETH_IMAGE:="ethereum/client-go"}

export GETH_PASSWORD=${GETH_PASSWORD:="apples"}

export GETH_DATA_HOST=${GETH_DATA_HOST:="$PWD/.veth"}
export GETH_DATA_CONTAINER="/root/.ethereum"

export GETH_NETWORK_ID=${GETH_NETWORK_ID:="23422"}
export GETH_RPC_PORT=${GETH_RPC_PORT:="8545"}

#
# HELPERS
#

function genesisblock() {
cat <<EOT
{
    "config": {
        "chainId": 100,
        "homesteadBlock": 0,
        "eip155Block": 0,
        "eip158Block": 0
    },
    "nonce": "0x0000000000000042",
    "mixhash": "0x0000000000000000000000000000000000000000000000000000000000000000",
    "difficulty": "400",
    "timestamp": "0x00",
    "coinbase": "0x0000000000000000000000000000000000000000",
    "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
    "gasLimit": "0xffffffff",
    "alloc": {
        "__ACCOUNT__": { "balance": "20000000000000000000" }
    }
}
EOT
}

function gethnode() {
  if [ -z "$GETH_NODE" ]; then
    GETH_NODE="$1"
  fi
  if [ -z "$GETH_NODE" ]; then
    GETH_NODE="node1"
  fi
  echo $GETH_NODE
}

function containerip() {
  docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' "$1"
}

function enode() {
  GETH_NODE=$(gethnode "$1")
  local ip=$(containerip "geth$GETH_NODE")
  local id=$(docker run --rm -v "$GETH_DATA_HOST/$GETH_NODE:$GETH_DATA_CONTAINER" $GETH_IMAGE --exec 'admin.nodeInfo.id' attach "ipc:$GETH_DATA_CONTAINER/geth.ipc" | sed 's/"//g')
  echo "$id"
}

function fullenode() {
  GETH_NODE=$(gethnode "$1")
  local ip=$(containerip "geth$GETH_NODE")
  local id=$(docker run --rm -v "$GETH_DATA_HOST/$GETH_NODE:$GETH_DATA_CONTAINER" $GETH_IMAGE --exec 'admin.nodeInfo.id' attach "ipc:$GETH_DATA_CONTAINER/geth.ipc" | sed 's/"//g')
  echo "enode://$id@$ip:30303"
}


#
# BINARIES
#

function geth() {
  GETH_NODE=$(gethnode)
  if [ -t 0 ]; then
    GETH_EXTRA_DOCKER="$GETH_EXTRA_DOCKER -t"
  fi
  docker run -i $GETH_EXTRA_DOCKER -v "$GETH_DATA_HOST/$GETH_NODE:$GETH_DATA_CONTAINER" $GETH_IMAGE "$@"
}

#
# API
#

function list() {
  ls -la "$GETH_DATA_HOST"
}

function init() {
  GETH_NODE=$(gethnode "$1")
  if [ -d "$GETH_DATA_HOST/$GETH_NODE" ]; then
    echo >&2 "$GETH_NODE already exists"
    exit 1
  fi
  mkdir -p "$GETH_DATA_HOST/$GETH_NODE"
  echo "$GETH_PASSWORD" > "$GETH_DATA_HOST/$GETH_NODE/password.txt"
  local accountstr=$(geth --password "$GETH_DATA_CONTAINER//password.txt" account new)
  echo $accountstr
  local account=$(echo $accountstr | cut -d '{' -f 2 | cut -d '}' -f 1)
  genesisblock | sed "s/__ACCOUNT__/$account/" > "$GETH_DATA_HOST/$GETH_NODE/genesisblock.json"
  geth init "$GETH_DATA_CONTAINER/genesisblock.json"
}

function clean() {
  rm -rf $GETH_DATA_HOST
}

function runstart() {
  GETH_NODE=$(gethnode "$1")
  GETH_EXTRA_DOCKER="$GETH_EXTRA_DOCKER --name geth$GETH_NODE -d"
  if [ -n "$VETH_REMOTE" ]; then
    GETH_EXTRA_DOCKER="$GETH_EXTRA_DOCKER -p 30303:30303"
  fi
  if [ -n "$VETH_EXPOSE_RPC" ]; then
    GETH_EXTRA_DOCKER="$GETH_EXTRA_DOCKER -p 8545:8545"
  fi
  geth \
    --networkid "$GETH_NETWORK_ID" \
    --rpc \
    --rpcapi "eth,net,web3" \
    --rpcport $GETH_RPC_PORT \
    --rpcaddr "0.0.0.0" \
    --rpccorsdomain "*" \
    --minerthreads="1" \
    --mine \
    --unlock 0 \
    --password "$GETH_DATA_CONTAINER/password.txt" $GETH_EXTRA_COMMANDS
}

function start() {
  GETH_NODE=$(gethnode "$1")
  if [ -n "$2" ]; then
    local joinenode=$(fullenode "$2")
    GETH_EXTRA_COMMANDS="$GETH_EXTRA_COMMANDS --bootnodes $joinenode"
    sleep 1
  fi
  runstart $1
}

function cluster() {
  export VETH_REMOTE=1
  start
}

function connect() {
  local ip="$1"
  local id="$2"
  export VETH_REMOTE=1
  GETH_EXTRA_COMMANDS="$GETH_EXTRA_COMMANDS --bootnodes enode://$id@$ip:30303"
  runstart
}

function stop() {
  GETH_NODE=$(gethnode "$1")
  docker rm -f "geth$GETH_NODE"
}

function logs() {
  GETH_NODE=$(gethnode "$1")
  docker logs -t -f "geth$GETH_NODE"
}

function attach() {
  GETH_NODE=$(gethnode "$1")
  geth attach "ipc:$GETH_DATA_CONTAINER/geth.ipc"
}

function exec() {
  GETH_NODE=$(gethnode "$1")
  geth --exec "$2" attach "ipc:$GETH_DATA_CONTAINER/geth.ipc"
}

cmd="$1"
shift
eval "$cmd $@"